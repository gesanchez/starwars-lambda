service: starwars
# app and org for use with dashboard.serverless.com
app: starwars-app
org: germanesanchezq

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-openapi-documentation

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  stage: dev
  region: us-east-1
  environment:
      STUDENT_TABLE: students
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"
package:
  exclude:
    - test/**

functions:
  films:
    handler: api/swapi.films
    events:
      - http: GET /films
  people:
    handler: api/swapi.people
    events:
      - http: GET /people
  create_students:
    handler: api/students.createUser
    events:
      - http: POST /create-user
  list_students:
    handler: api/students.listUser
    events:
      - http: GET /list-users

resources: # CloudFormation template syntax from here on.
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: students
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  documentation:
    version: '1'
    title: 'Starwars and Students Serverless'
    description: 'Api para comunicarse con api de starwars y poder registrar estudiantes'
    models: {}
